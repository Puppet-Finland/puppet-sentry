# This file is just Python, with a touch of Django which means
# you can inherit and tweak settings to your hearts content.
from sentry.conf.server import *

import os.path

CONF_ROOT = os.path.dirname(__file__)

DATABASES = {
    'default': {
        # You can swap out the engine for MySQL easily by changing this value
        # to ``django.db.backends.mysql`` or to PostgreSQL with
        # ``django.db.backends.postgresql_psycopg2``

        # If you change this, you'll also need to install the appropriate python
        # package: psycopg2 (Postgres) or mysql-python
    <%- if @database == 'sqlite' -%>
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(CONF_ROOT, 'sentry.db'),
    <%- elsif @database == 'mysql' -%>
        'ENGINE': 'django.db.backends.mysql',
    <%- elsif @database == 'postgres' -%>
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        # If you're using Postgres, we recommend turning on autocommit
        'OPTIONS': {
            'autocommit': True,
        },
    <%- end -%>
    <%- if @database != 'sqlite' -%>
        'NAME': '<%= @config['database']['name'] %>',
        'USER': '<%= @config['database']['user'] %>',
        'PASSWORD': '<%= @config['database']['password'] %>',
        'HOST': '<%= @config['database']['host'] %>',
        'PORT': '<%= @config['database']['port'] %>',
    <%- end -%>
    }
}

# You should not change this setting after your database has been created
# unless you have altered all schemas first
SENTRY_USE_BIG_INTS = True

# If you're expecting any kind of real traffic on Sentry, we highly recommend
# configuring the CACHES and Redis settings

###########
# General #
###########

# Instruct Sentry that this install intends to be run by a single organization
# and thus various UI optimizations should be enabled.
SENTRY_SINGLE_ORGANIZATION = True
DEBUG = False

SENTRY_BEACON = <%= @beacon_enabled.to_s.capitalize! %>

# If you're expecting any kind of real traffic on Sentry, we highly recommend
# configuring the CACHES and Redis settings

###########
## Cache ##
###########

<% if @redis_enabled -%>
SENTRY_CACHE = 'sentry.cache.redis.RedisCache'

# Rate limits apply to notification handlers and are enforced per-project
# automatically.
SENTRY_RATELIMITER = 'sentry.ratelimits.redis.RedisRateLimiter'

# Buffers (combined with queueing) act as an intermediate layer between the
# database and the storage API. They will greatly improve efficiency on large
# numbers of the same events being sent to the API in a short amount of time.
# (read: if you send any kind of real data to Sentry, you should enable buffers)
SENTRY_BUFFER = 'sentry.buffer.redis.RedisBuffer'

# Quotas allow you to rate limit individual projects or the Sentry install as
# a whole.
SENTRY_QUOTAS = 'sentry.quotas.redis.RedisQuota'

# The TSDB is used for building charts as well as making things like per-rate
# alerts possible.
SENTRY_TSDB = 'sentry.tsdb.redis.RedisTSDB'

# The digest backend powers notification summaries.
SENTRY_DIGESTS = 'sentry.digests.backends.redis.RedisBackend'

<% else -%>
SENTRY_CACHE = 'sentry.cache.django.DjangoCache'
<% end -%>

################
# File storage #
################

# Any Django storage backend is compatible with Sentry. For more solutions see
# the django-storages package: https://django-storages.readthedocs.org/en/latest/

SENTRY_FILESTORE = 'django.core.files.storage.FileSystemStorage'
SENTRY_FILESTORE_OPTIONS = {
    'location': '<%= @filestore_location %>',
}

################
## Web Server ##
################

# If you're not hosting at the root of your web server,
# you need to uncomment and set it to the path where Sentry is hosted.

<% if @url_path != '' -%>
FORCE_SCRIPT_NAME = '<%= @url_path %>'
<% end -%>

<% if @proxy_enabled -%>
# If you're using a reverse proxy, you should enable the X-Forwarded-Proto
# and X-Forwarded-Host headers, and uncomment the following settings
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
USE_X_FORWARDED_HOST = True
<% end -%>

SENTRY_WEB_HOST = '<%= @host %>'
SENTRY_WEB_PORT = <%= @port %>
SENTRY_WEB_OPTIONS = {
    'workers': <%= @workers %>,  # the number of gunicorn workers
#    'limit_request_line': 0,  # required for raven-js
#    'secure_scheme_headers': {'X-FORWARDED-PROTO': 'https'},
}

##########
## etc. ##
##########

<% Array(@extra_config).each do |line| -%>
<%= line %>
<% end -%>
